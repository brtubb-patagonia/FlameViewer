tree_info {
  nodes_count: 147
}
base_node {
  nodes {
    width: 659
    node_info {
      method_name: "main"
      class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt"
      description: "(String[])void"
    }
    nodes {
      width: 1
      node_info {
        method_name: "parseLongs"
        class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt"
        description: "(File)TLongArrayList"
      }
      nodes {
        width: 1
        node_info {
          method_name: "hasNextLong"
          class_name: "java.util.Scanner"
          description: "()boolean"
        }
        nodes {
          width: 1
          node_info {
            method_name: "hasNextLong"
            class_name: "java.util.Scanner"
            description: "(int)boolean"
          }
          nodes {
            width: 1
            node_info {
              method_name: "hasNext"
              class_name: "java.util.Scanner"
              description: "(Pattern)boolean"
            }
            nodes {
              width: 1
              node_info {
                method_name: "getCompleteTokenInBuffer"
                class_name: "java.util.Scanner"
                description: "(Pattern)String"
              }
              nodes {
                width: 1
                node_info {
                  method_name: "find"
                  class_name: "java.util.regex.Matcher"
                  description: "()boolean"
                }
                nodes {
                  width: 1
                  node_info {
                    method_name: "search"
                    class_name: "java.util.regex.Matcher"
                    description: "(int)boolean"
                  }
                  nodes {
                    width: 1
                    node_info {
                      method_name: "match"
                      class_name: "java.util.regex.Pattern$Start"
                      description: "(Matcher, int, CharSequence)boolean"
                    }
                    nodes {
                      width: 1
                      node_info {
                        method_name: "match"
                        class_name: "java.util.regex.Pattern$Curly"
                        description: "(Matcher, int, CharSequence)boolean"
                      }
                      nodes {
                        width: 1
                        node_info {
                          method_name: "match0"
                          class_name: "java.util.regex.Pattern$Curly"
                          description: "(Matcher, int, int, CharSequence)boolean"
                        }
                        nodes {
                          width: 1
                          node_info {
                            method_name: "match"
                            class_name: "java.util.regex.Pattern$CharProperty"
                            description: "(Matcher, int, CharSequence)boolean"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    nodes {
      offset: 1
      width: 657
      node_info {
        method_name: "tryToFindSolutionForEachRulesSet$default"
        class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt"
        description: "(List, Writer, int, Object)Set"
      }
      nodes {
        offset: 1
        width: 657
        node_info {
          method_name: "tryToFindSolutionForEachRulesSet"
          class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt"
          description: "(List, Writer)Set"
        }
        nodes {
          offset: 1
          width: 657
          node_info {
            method_name: "useFileToFindSolutions"
            class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt"
            description: "(List, File, Writer, Set, int, int, int)void"
          }
          nodes {
            offset: 1
            width: 21
            node_info {
              method_name: "<init>"
              class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph"
              description: "(TileSet)void"
            }
            nodes {
              offset: 1
              width: 10
              node_info {
                method_name: "<init>"
                class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile"
                description: "(Tile, POSITION)void"
              }
              nodes {
                offset: 1
                width: 1
                node_info {
                  method_name: "iterator"
                  class_name: "java.util.ArrayList"
                  description: "()Iterator"
                }
              }
              nodes {
                offset: 2
                width: 1
                node_info {
                  method_name: "next"
                  class_name: "kotlin.collections.LongIterator"
                  description: "()Object"
                }
                nodes {
                  offset: 2
                  width: 1
                  node_info {
                    method_name: "next"
                    class_name: "kotlin.collections.LongIterator"
                    description: "()Long"
                  }
                  nodes {
                    offset: 2
                    width: 1
                    node_info {
                      method_name: "valueOf"
                      class_name: "java.lang.Long"
                      description: "(long)Long"
                    }
                  }
                }
              }
              nodes {
                offset: 3
                width: 1
                node_info {
                  method_name: "get"
                  class_name: "org.apache.lucene.util.OpenBitSet"
                  description: "(long)boolean"
                }
              }
            }
            nodes {
              offset: 11
              width: 1
              node_info {
                method_name: "<init>"
                class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood"
                description: "(Tile, Tile, Tile, Tile, Tile)void"
              }
              nodes {
                offset: 11
                width: 1
                node_info {
                  method_name: "checkParameterIsNotNull"
                  class_name: "kotlin.jvm.internal.Intrinsics"
                  description: "(Object, String)void"
                }
              }
            }
            nodes {
              offset: 12
              width: 6
              node_info {
                method_name: "getIfAlreadyCreated"
                class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph"
                description: "(Tile)Tile"
              }
              nodes {
                offset: 12
                width: 6
                node_info {
                  method_name: "get"
                  class_name: "org.apache.commons.collections4.bidimap.AbstractDualBidiMap"
                  description: "(Object)Object"
                }
                nodes {
                  offset: 12
                  width: 6
                  node_info {
                    method_name: "get"
                    class_name: "java.util.HashMap"
                    description: "(Object)Object"
                  }
                  nodes {
                    offset: 12
                    width: 6
                    node_info {
                      method_name: "getNode"
                      class_name: "java.util.HashMap"
                      description: "(int, Object)HashMap$Node"
                    }
                    nodes {
                      offset: 12
                      width: 4
                      node_info {
                        method_name: "equals"
                        class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile"
                        description: "(Object)boolean"
                      }
                    }
                    nodes {
                      offset: 16
                      width: 2
                      node_info {
                        method_name: "getTreeNode"
                        class_name: "java.util.HashMap$TreeNode"
                        description: "(int, Object)HashMap$TreeNode"
                      }
                      nodes {
                        offset: 16
                        width: 1
                        node_info {
                          method_name: "find"
                          class_name: "java.util.HashMap$TreeNode"
                          description: "(int, Object, Class)HashMap$TreeNode"
                        }
                        nodes {
                          offset: 16
                          width: 1
                          node_info {
                            method_name: "equals"
                            class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile"
                            description: "(Object)boolean"
                          }
                        }
                      }
                      nodes {
                        offset: 17
                        width: 1
                        node_info {
                          method_name: "root"
                          class_name: "java.util.HashMap$TreeNode"
                          description: "()HashMap$TreeNode"
                        }
                      }
                    }
                  }
                }
              }
            }
            nodes {
              offset: 18
              width: 3
              node_info {
                method_name: "add"
                class_name: "java.util.HashSet"
                description: "(Object)boolean"
              }
              nodes {
                offset: 18
                width: 3
                node_info {
                  method_name: "put"
                  class_name: "java.util.HashMap"
                  description: "(Object, Object)Object"
                }
                nodes {
                  offset: 18
                  width: 3
                  node_info {
                    method_name: "putVal"
                    class_name: "java.util.HashMap"
                    description: "(int, Object, Object, boolean, boolean)Object"
                  }
                  nodes {
                    offset: 18
                    width: 1
                    node_info {
                      method_name: "equals"
                      class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood"
                      description: "(Object)boolean"
                    }
                    nodes {
                      offset: 18
                      width: 1
                      node_info {
                        method_name: "areEqual"
                        class_name: "kotlin.jvm.internal.Intrinsics"
                        description: "(Object, Object)boolean"
                      }
                      nodes {
                        offset: 18
                        width: 1
                        node_info {
                          method_name: "equals"
                          class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile"
                          description: "(Object)boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          nodes {
            offset: 22
            width: 7
            node_info {
              method_name: "<init>"
              class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet"
              description: "(File)void"
            }
            nodes {
              offset: 22
              width: 2
              node_info {
                method_name: "read"
                class_name: "java.io.BufferedReader"
                description: "()int"
              }
              nodes {
                offset: 22
                width: 1
                node_info {
                  method_name: "fill"
                  class_name: "java.io.BufferedReader"
                  description: "()void"
                }
                nodes {
                  offset: 22
                  width: 1
                  node_info {
                    method_name: "read"
                    class_name: "java.io.InputStreamReader"
                    description: "(char[], int, int)int"
                  }
                  nodes {
                    offset: 22
                    width: 1
                    node_info {
                      method_name: "read"
                      class_name: "sun.nio.cs.StreamDecoder"
                      description: "(char[], int, int)int"
                    }
                    nodes {
                      offset: 22
                      width: 1
                      node_info {
                        method_name: "implRead"
                        class_name: "sun.nio.cs.StreamDecoder"
                        description: "(char[], int, int)int"
                      }
                      nodes {
                        offset: 22
                        width: 1
                        node_info {
                          method_name: "decode"
                          class_name: "java.nio.charset.CharsetDecoder"
                          description: "(ByteBuffer, CharBuffer, boolean)CoderResult"
                        }
                        nodes {
                          offset: 22
                          width: 1
                          node_info {
                            method_name: "decodeLoop"
                            class_name: "sun.nio.cs.UTF_8$Decoder"
                            description: "(ByteBuffer, CharBuffer)CoderResult"
                          }
                          nodes {
                            offset: 22
                            width: 1
                            node_info {
                              method_name: "decodeArrayLoop"
                              class_name: "sun.nio.cs.UTF_8$Decoder"
                              description: "(ByteBuffer, CharBuffer)CoderResult"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            nodes {
              offset: 24
              width: 1
              node_info {
                method_name: "add"
                class_name: "java.util.ArrayList"
                description: "(Object)boolean"
              }
              nodes {
                offset: 24
                width: 1
                node_info {
                  method_name: "ensureCapacityInternal"
                  class_name: "java.util.ArrayList"
                  description: "(int)void"
                }
                nodes {
                  offset: 24
                  width: 1
                  node_info {
                    method_name: "ensureExplicitCapacity"
                    class_name: "java.util.ArrayList"
                    description: "(int)void"
                  }
                }
              }
            }
            nodes {
              offset: 25
              width: 1
              node_info {
                method_name: "nextInt"
                class_name: "java.util.Scanner"
                description: "()int"
              }
              nodes {
                offset: 25
                width: 1
                node_info {
                  method_name: "nextInt"
                  class_name: "java.util.Scanner"
                  description: "(int)int"
                }
                nodes {
                  offset: 25
                  width: 1
                  node_info {
                    method_name: "integerPattern"
                    class_name: "java.util.Scanner"
                    description: "()Pattern"
                  }
                  nodes {
                    offset: 25
                    width: 1
                    node_info {
                      method_name: "forName"
                      class_name: "sun.misc.LRUCache"
                      description: "(Object)Object"
                    }
                    nodes {
                      offset: 25
                      width: 1
                      node_info {
                        method_name: "create"
                        class_name: "java.util.Scanner$1"
                        description: "(Object)Object"
                      }
                      nodes {
                        offset: 25
                        width: 1
                        node_info {
                          method_name: "create"
                          class_name: "java.util.Scanner$1"
                          description: "(String)Pattern"
                        }
                        nodes {
                          offset: 25
                          width: 1
                          node_info {
                            method_name: "compile"
                            class_name: "java.util.regex.Pattern"
                            description: "(String)Pattern"
                          }
                          nodes {
                            offset: 25
                            width: 1
                            node_info {
                              method_name: "<init>"
                              class_name: "java.util.regex.Pattern"
                              description: "(String, int)void"
                            }
                            nodes {
                              offset: 25
                              width: 1
                              node_info {
                                method_name: "compile"
                                class_name: "java.util.regex.Pattern"
                                description: "()void"
                              }
                              nodes {
                                offset: 25
                                width: 1
                                node_info {
                                  method_name: "expr"
                                  class_name: "java.util.regex.Pattern"
                                  description: "(Pattern$Node)Pattern$Node"
                                }
                                nodes {
                                  offset: 25
                                  width: 1
                                  node_info {
                                    method_name: "sequence"
                                    class_name: "java.util.regex.Pattern"
                                    description: "(Pattern$Node)Pattern$Node"
                                  }
                                  nodes {
                                    offset: 25
                                    width: 1
                                    node_info {
                                      method_name: "group0"
                                      class_name: "java.util.regex.Pattern"
                                      description: "()Pattern$Node"
                                    }
                                    nodes {
                                      offset: 25
                                      width: 1
                                      node_info {
                                        method_name: "expr"
                                        class_name: "java.util.regex.Pattern"
                                        description: "(Pattern$Node)Pattern$Node"
                                      }
                                      nodes {
                                        offset: 25
                                        width: 1
                                        node_info {
                                          method_name: "sequence"
                                          class_name: "java.util.regex.Pattern"
                                          description: "(Pattern$Node)Pattern$Node"
                                        }
                                        nodes {
                                          offset: 25
                                          width: 1
                                          node_info {
                                            method_name: "group0"
                                            class_name: "java.util.regex.Pattern"
                                            description: "()Pattern$Node"
                                          }
                                          nodes {
                                            offset: 25
                                            width: 1
                                            node_info {
                                              method_name: "expr"
                                              class_name: "java.util.regex.Pattern"
                                              description: "(Pattern$Node)Pattern$Node"
                                            }
                                            nodes {
                                              offset: 25
                                              width: 1
                                              node_info {
                                                method_name: "sequence"
                                                class_name: "java.util.regex.Pattern"
                                                description: "(Pattern$Node)Pattern$Node"
                                              }
                                              nodes {
                                                offset: 25
                                                width: 1
                                                node_info {
                                                  method_name: "group0"
                                                  class_name: "java.util.regex.Pattern"
                                                  description: "()Pattern$Node"
                                                }
                                                nodes {
                                                  offset: 25
                                                  width: 1
                                                  node_info {
                                                    method_name: "expr"
                                                    class_name: "java.util.regex.Pattern"
                                                    description: "(Pattern$Node)Pattern$Node"
                                                  }
                                                  nodes {
                                                    offset: 25
                                                    width: 1
                                                    node_info {
                                                      method_name: "sequence"
                                                      class_name: "java.util.regex.Pattern"
                                                      description: "(Pattern$Node)Pattern$Node"
                                                    }
                                                    nodes {
                                                      offset: 25
                                                      width: 1
                                                      node_info {
                                                        method_name: "group0"
                                                        class_name: "java.util.regex.Pattern"
                                                        description: "()Pattern$Node"
                                                      }
                                                      nodes {
                                                        offset: 25
                                                        width: 1
                                                        node_info {
                                                          method_name: "expr"
                                                          class_name: "java.util.regex.Pattern"
                                                          description: "(Pattern$Node)Pattern$Node"
                                                        }
                                                        nodes {
                                                          offset: 25
                                                          width: 1
                                                          node_info {
                                                            method_name: "sequence"
                                                            class_name: "java.util.regex.Pattern"
                                                            description: "(Pattern$Node)Pattern$Node"
                                                          }
                                                          nodes {
                                                            offset: 25
                                                            width: 1
                                                            node_info {
                                                              method_name: "group0"
                                                              class_name: "java.util.regex.Pattern"
                                                              description: "()Pattern$Node"
                                                            }
                                                            nodes {
                                                              offset: 25
                                                              width: 1
                                                              node_info {
                                                                method_name: "addFlag"
                                                                class_name: "java.util.regex.Pattern"
                                                                description: "()void"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            nodes {
              offset: 26
              width: 1
              node_info {
                method_name: "<clinit>"
                class_name: "org.apache.lucene.search.DocIdSet"
                description: "()void"
              }
              nodes {
                offset: 26
                width: 1
                node_info {
                  method_name: "loadClass"
                  class_name: "java.lang.ClassLoader"
                  description: "(String)Class"
                }
                nodes {
                  offset: 26
                  width: 1
                  node_info {
                    method_name: "loadClass"
                    class_name: "sun.misc.Launcher$AppClassLoader"
                    description: "(String, boolean)Class"
                  }
                  nodes {
                    offset: 26
                    width: 1
                    node_info {
                      method_name: "loadClass"
                      class_name: "java.lang.ClassLoader"
                      description: "(String, boolean)Class"
                    }
                    nodes {
                      offset: 26
                      width: 1
                      node_info {
                        method_name: "findClass"
                        class_name: "java.net.URLClassLoader"
                        description: "(String)Class"
                      }
                      nodes {
                        offset: 26
                        width: 1
                        node_info {
                          method_name: "doPrivileged"
                          class_name: "java.security.AccessController"
                          description: "(PrivilegedExceptionAction, AccessControlContext)Object"
                        }
                        nodes {
                          offset: 26
                          width: 1
                          node_info {
                            method_name: "run"
                            class_name: "java.net.URLClassLoader$1"
                            description: "()Object"
                          }
                          nodes {
                            offset: 26
                            width: 1
                            node_info {
                              method_name: "run"
                              class_name: "java.net.URLClassLoader$1"
                              description: "()Class"
                            }
                            nodes {
                              offset: 26
                              width: 1
                              node_info {
                                method_name: "getResource"
                                class_name: "sun.misc.URLClassPath"
                                description: "(String, boolean)Resource"
                              }
                              nodes {
                                offset: 26
                                width: 1
                                node_info {
                                  method_name: "getResource"
                                  class_name: "sun.misc.URLClassPath$JarLoader"
                                  description: "(String, boolean)Resource"
                                }
                                nodes {
                                  offset: 26
                                  width: 1
                                  node_info {
                                    method_name: "getJarEntry"
                                    class_name: "java.util.jar.JarFile"
                                    description: "(String)JarEntry"
                                  }
                                  nodes {
                                    offset: 26
                                    width: 1
                                    node_info {
                                      method_name: "getEntry"
                                      class_name: "java.util.jar.JarFile"
                                      description: "(String)ZipEntry"
                                    }
                                    nodes {
                                      offset: 26
                                      width: 1
                                      node_info {
                                        method_name: "getEntry"
                                        class_name: "java.util.zip.ZipFile"
                                        description: "(String)ZipEntry"
                                      }
                                      nodes {
                                        offset: 26
                                        width: 1
                                        node_info {
                                          method_name: "getBytes"
                                          class_name: "java.util.zip.ZipCoder"
                                          description: "(String)byte[]"
                                        }
                                        nodes {
                                          offset: 26
                                          width: 1
                                          node_info {
                                            method_name: "wrap"
                                            class_name: "java.nio.ByteBuffer"
                                            description: "(byte[])ByteBuffer"
                                          }
                                          nodes {
                                            offset: 26
                                            width: 1
                                            node_info {
                                              method_name: "wrap"
                                              class_name: "java.nio.ByteBuffer"
                                              description: "(byte[], int, int)ByteBuffer"
                                            }
                                            nodes {
                                              offset: 26
                                              width: 1
                                              node_info {
                                                method_name: "<init>"
                                                class_name: "java.nio.HeapByteBuffer"
                                                description: "(byte[], int, int)void"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            nodes {
              offset: 27
              width: 1
              node_info {
                method_name: "set"
                class_name: "org.apache.lucene.util.OpenBitSet"
                description: "(long)void"
              }
            }
          }
          nodes {
            offset: 29
            width: 628
            node_info {
              method_name: "tryToFindSolution"
              class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt"
              description: "(Set, DirectedGraph)LabelingFunction"
            }
            nodes {
              offset: 29
              width: 40
              node_info {
                method_name: "solve"
                class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt"
                description: "(List, int)List"
              }
              nodes {
                offset: 29
                width: 40
                node_info {
                  method_name: "initSat"
                  class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt"
                  description: "(List)JPicoSat"
                }
                nodes {
                  offset: 29
                  width: 13
                  node_info {
                    method_name: "subList"
                    class_name: "gnu.trove.list.array.TIntArrayList"
                    description: "(int, int)TIntList"
                  }
                  nodes {
                    offset: 29
                    width: 13
                    node_info {
                      method_name: "<init>"
                      class_name: "gnu.trove.list.array.TIntArrayList"
                      description: "(int)void"
                    }
                    nodes {
                      offset: 29
                      width: 13
                      node_info {
                        method_name: "<init>"
                        class_name: "gnu.trove.list.array.TIntArrayList"
                        description: "(int, int)void"
                      }
                    }
                  }
                }
                nodes {
                  offset: 42
                  width: 27
                  node_info {
                    method_name: "addClause"
                    class_name: "jnisat.JPicoSat"
                    description: "(int[])void"
                  }
                }
              }
            }
            nodes {
              offset: 69
              width: 588
              node_info {
                method_name: "toDimacs"
                class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt"
                description: "(DirectedGraph, Set)List"
              }
              nodes {
                offset: 69
                width: 575
                node_info {
                  method_name: "formClause"
                  class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt"
                  description: "(DirectedGraph$Neighbourhood, Set, List)void"
                }
                nodes {
                  offset: 69
                  width: 37
                  node_info {
                    method_name: "isIncluded"
                    class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.VertexRule"
                    description: "(POSITION)boolean"
                  }
                  nodes {
                    offset: 69
                    width: 37
                    node_info {
                      method_name: "get"
                      class_name: "org.apache.commons.collections4.bidimap.AbstractDualBidiMap"
                      description: "(Object)Object"
                    }
                    nodes {
                      offset: 69
                      width: 37
                      node_info {
                        method_name: "get"
                        class_name: "java.util.HashMap"
                        description: "(Object)Object"
                      }
                      nodes {
                        offset: 69
                        width: 37
                        node_info {
                          method_name: "getNode"
                          class_name: "java.util.HashMap"
                          description: "(int, Object)HashMap$Node"
                        }
                      }
                    }
                  }
                }
                nodes {
                  offset: 106
                  width: 8
                  node_info {
                    method_name: "contains"
                    class_name: "gnu.trove.impl.hash.TIntHash"
                    description: "(int)boolean"
                  }
                  nodes {
                    offset: 106
                    width: 7
                    node_info {
                      method_name: "index"
                      class_name: "gnu.trove.impl.hash.TIntHash"
                      description: "(int)int"
                    }
                    nodes {
                      offset: 106
                      width: 6
                      node_info {
                        method_name: "indexRehashed"
                        class_name: "gnu.trove.impl.hash.TIntHash"
                        description: "(int, int, int, byte)int"
                      }
                    }
                  }
                }
                nodes {
                  offset: 114
                  width: 150
                  node_info {
                    method_name: "addAll"
                    class_name: "gnu.trove.list.array.TIntArrayList"
                    description: "(TIntCollection)boolean"
                  }
                  nodes {
                    offset: 114
                    width: 18
                    node_info {
                      method_name: "hasNext"
                      class_name: "gnu.trove.impl.hash.THashPrimitiveIterator"
                      description: "()boolean"
                    }
                    nodes {
                      offset: 114
                      width: 18
                      node_info {
                        method_name: "nextIndex"
                        class_name: "gnu.trove.impl.hash.THashPrimitiveIterator"
                        description: "()int"
                      }
                    }
                  }
                  nodes {
                    offset: 132
                    width: 91
                    node_info {
                      method_name: "next"
                      class_name: "gnu.trove.set.hash.TIntHashSet$TIntHashIterator"
                      description: "()int"
                    }
                    nodes {
                      offset: 132
                      width: 91
                      node_info {
                        method_name: "moveToNextIndex"
                        class_name: "gnu.trove.impl.hash.THashPrimitiveIterator"
                        description: "()void"
                      }
                      nodes {
                        offset: 132
                        width: 91
                        node_info {
                          method_name: "nextIndex"
                          class_name: "gnu.trove.impl.hash.THashPrimitiveIterator"
                          description: "()int"
                        }
                      }
                    }
                  }
                  nodes {
                    offset: 223
                    width: 1
                    node_info {
                      method_name: "iterator"
                      class_name: "gnu.trove.set.hash.TIntHashSet"
                      description: "()TIntIterator"
                    }
                    nodes {
                      offset: 223
                      width: 1
                      node_info {
                        method_name: "<init>"
                        class_name: "gnu.trove.set.hash.TIntHashSet$TIntHashIterator"
                        description: "(TIntHashSet, TIntHash)void"
                      }
                    }
                  }
                }
                nodes {
                  offset: 264
                  width: 42
                  node_info {
                    method_name: "<init>"
                    class_name: "gnu.trove.set.hash.TIntHashSet"
                    description: "()void"
                  }
                  nodes {
                    offset: 264
                    width: 42
                    node_info {
                      method_name: "<init>"
                      class_name: "gnu.trove.impl.hash.TIntHash"
                      description: "()void"
                    }
                    nodes {
                      offset: 264
                      width: 42
                      node_info {
                        method_name: "<init>"
                        class_name: "gnu.trove.impl.hash.TPrimitiveHash"
                        description: "()void"
                      }
                      nodes {
                        offset: 264
                        width: 42
                        node_info {
                          method_name: "<init>"
                          class_name: "gnu.trove.impl.hash.THash"
                          description: "()void"
                        }
                        nodes {
                          offset: 264
                          width: 42
                          node_info {
                            method_name: "<init>"
                            class_name: "gnu.trove.impl.hash.THash"
                            description: "(int, float)void"
                          }
                          nodes {
                            offset: 264
                            width: 42
                            node_info {
                              method_name: "setUp"
                              class_name: "gnu.trove.impl.hash.TIntHash"
                              description: "(int)int"
                            }
                            nodes {
                              offset: 264
                              width: 42
                              node_info {
                                method_name: "setUp"
                                class_name: "gnu.trove.impl.hash.TPrimitiveHash"
                                description: "(int)int"
                              }
                              nodes {
                                offset: 264
                                width: 42
                                node_info {
                                  method_name: "setUp"
                                  class_name: "gnu.trove.impl.hash.THash"
                                  description: "(int)int"
                                }
                                nodes {
                                  offset: 264
                                  width: 42
                                  node_info {
                                    method_name: "nextPrime"
                                    class_name: "gnu.trove.impl.PrimeFinder"
                                    description: "(int)int"
                                  }
                                  nodes {
                                    offset: 264
                                    width: 42
                                    node_info {
                                      method_name: "binarySearch"
                                      class_name: "java.util.Arrays"
                                      description: "(int[], int)int"
                                    }
                                    nodes {
                                      offset: 264
                                      width: 15
                                      node_info {
                                        method_name: "binarySearch0"
                                        class_name: "java.util.Arrays"
                                        description: "(int[], int, int, int)int"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                nodes {
                  offset: 306
                  width: 5
                  node_info {
                    method_name: "add"
                    class_name: "gnu.trove.set.hash.TIntHashSet"
                    description: "(int)boolean"
                  }
                  nodes {
                    offset: 306
                    width: 5
                    node_info {
                      method_name: "insertKey"
                      class_name: "gnu.trove.impl.hash.TIntHash"
                      description: "(int)int"
                    }
                    nodes {
                      offset: 306
                      width: 5
                      node_info {
                        method_name: "insertKeyRehash"
                        class_name: "gnu.trove.impl.hash.TIntHash"
                        description: "(int, int, int, byte)int"
                      }
                    }
                  }
                }
                nodes {
                  offset: 311
                  width: 157
                  node_info {
                    method_name: "get"
                    class_name: "java.util.HashMap"
                    description: "(Object)Object"
                  }
                  nodes {
                    offset: 311
                    width: 153
                    node_info {
                      method_name: "getNode"
                      class_name: "java.util.HashMap"
                      description: "(int, Object)HashMap$Node"
                    }
                  }
                  nodes {
                    offset: 464
                    width: 4
                    node_info {
                      method_name: "hash"
                      class_name: "java.util.HashMap"
                      description: "(Object)int"
                    }
                    nodes {
                      offset: 464
                      width: 4
                      node_info {
                        method_name: "hashCode"
                        class_name: "java.lang.Enum"
                        description: "()int"
                      }
                    }
                  }
                }
              }
              nodes {
                offset: 644
                width: 9
                node_info {
                  method_name: "reverseRules"
                  class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.UtilKt"
                  description: "(Set)Set"
                }
                nodes {
                  offset: 644
                  width: 8
                  node_info {
                    method_name: "add"
                    class_name: "java.util.HashSet"
                    description: "(Object)boolean"
                  }
                  nodes {
                    offset: 644
                    width: 8
                    node_info {
                      method_name: "put"
                      class_name: "java.util.HashMap"
                      description: "(Object, Object)Object"
                    }
                    nodes {
                      offset: 644
                      width: 8
                      node_info {
                        method_name: "putVal"
                        class_name: "java.util.HashMap"
                        description: "(int, Object, Object, boolean, boolean)Object"
                      }
                    }
                  }
                }
              }
            }
          }
          nodes {
            offset: 657
            width: 1
            node_info {
              method_name: "rotateRuleSet$default"
              class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.VertexRuleKt"
              description: "(Set, int, int, Object)Set"
            }
            nodes {
              offset: 657
              width: 1
              node_info {
                method_name: "rotateRuleSet"
                class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.VertexRuleKt"
                description: "(Set, int)Set"
              }
              nodes {
                offset: 657
                width: 1
                node_info {
                  method_name: "toSet"
                  class_name: "kotlin.collections.CollectionsKt___CollectionsKt"
                  description: "(Iterable)Set"
                }
                nodes {
                  offset: 657
                  width: 1
                  node_info {
                    method_name: "toCollection"
                    class_name: "kotlin.collections.CollectionsKt___CollectionsKt"
                    description: "(Iterable, Collection)Collection"
                  }
                  nodes {
                    offset: 657
                    width: 1
                    node_info {
                      method_name: "add"
                      class_name: "java.util.HashSet"
                      description: "(Object)boolean"
                    }
                    nodes {
                      offset: 657
                      width: 1
                      node_info {
                        method_name: "put"
                        class_name: "java.util.HashMap"
                        description: "(Object, Object)Object"
                      }
                      nodes {
                        offset: 657
                        width: 1
                        node_info {
                          method_name: "putVal"
                          class_name: "java.util.HashMap"
                          description: "(int, Object, Object, boolean, boolean)Object"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
depth: 30
width: 659
